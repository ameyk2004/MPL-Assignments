1. start
2. declare and define initialised data in . data section
3. declare uninitialized data in bss section
4. set num1 and num2 to predefined quadword values
5. set res varaible to 00h
6. display menu
7. take option from user
8. Compare the option with '1' for addition.
9. If not '1', check for subtraction.
10.If not '2', check for multiplication.
11.If not '3', check for division.
12. If not '4', check for exit option.
13. If not '5', loop back to the menu.
14. call the required procedure if choice matches selected option

Algo for addProcedure
1. move num1 to rax
2. add num2 to rax and store result in rax
3. store result in res varaible
4. return

Algo for subProcedure
1. move num1 to rax
2. sub num2 from rax and store result in rax
3. store result in res varaible
4. return

Algo for mulProcedure
1. move num1 to rax
2. move dword[num2] to ebx
3. multiply ebx with rax
4. store result in res varaible
5. return

Algo for divProcedure
1. clear rax, rbcx, rcx
1. move dividednd to rax
2. move dword[divisor] to ecx
3. divide rax by ecx
4. store quitent in res varaible from rax
5. display quotient
6. store remainder in res varaible from rdx
7. display remainder
8. return